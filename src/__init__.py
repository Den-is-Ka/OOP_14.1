# Посмотреть критерии
#  Общие критерии
# Реализованный код соответствует PEP 8.
# В README-файл добавлено как минимум упоминание о реализованной в этом задании функциональности проекта.
# Весь имеющийся код в файле main.py запускается без ошибок.
#  Базовый класс
# Создан базовый абстрактный класс с именем BaseProduct, который является родительским для классов продуктов.
# Классы «Смартфон» и «Трава газонная» наследуются только от класса Product.
# Выделена общая для каждого продукта функциональность и описана в абстрактном классе.
#  Класс-миксин
# Реализован класс-миксин, который при создании объекта распечатывает в консоль информацию о том, от какого класса и с
# какими параметрами был создан объект.
# Миксин добавлен в цепочку наследования класса Product.
#  Тестирование
# Написаны тесты для новой функциональности.
# В репозитории есть отчет о покрытии тестами.
# Покрытие функционального кода тестами — более 75%.
# После каждого задания вы найдете хештеги. Они подскажут вам, какие темы нужно использовать, чтобы выполнить задание.
# Если вы затрудняетесь, как выполнять задание, откройте подсказку в спойлере.
# Продолжаем работу над магазином и в этой домашней работе оптимизируем работу с родительскими классами путем создания
# абстрактных классов и классов наследников.
#
# Обратите внимание:
# Новые проекты и репозитории не создаются.
# Задания выполняйте в репозиториях соответствующих проектов из предыдущего домашнего задания.
# Задание 1
# Создайте базовый абстрактный класс с именем BaseProduct , который станет родительским для класса продуктов.
#
# Классы «Смартфон» и «Трава газонная» остаются наследниками класса Product и тем самым наследуют все свойства абстрактного
# класса.
#
# Важно выделить общую функциональность, которая должна быть у каждого продукта, и описать ее в абстрактном классе.
# # ABC
# # abstractmethod
# Подсказка
# Первое задание нацелено на отработку создания абстрактных классов и методов. Важно, чтобы в итоге было три класса
# продуктов (продукт, смартфон, трава газонная), у которых есть свои родительские классы.
# Задание 2
# Реализуйте класс-миксин, который будет при создании объекта, то есть при работе метода __init__, печатать в консоль
# информацию о том, от какого класса и с какими параметрами был создан объект.
# Например:
# Product('Продукт1', 'Описание продукта', 1200, 10)
# Добавьте миксин в цепочку наследования класса Product.
# # __repr__
# # множественное_наследование
# # миксины
# Подсказка
# Напишите тесты для новой функциональности. При этом убедитесь что тесты, которые были написаны ранее, выполняются без
# ошибок.
# # pytest
# # assert
#
#
#
